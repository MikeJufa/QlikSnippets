//==============Auto-generated section====================
Set dataManagerTables = '','multi-cal';
//This block renames script tables from non generated section which conflict with the names of managed tables

For each name in $(dataManagerTables) 
    Let index = 0;
    Let currentName = name; 
    Let tableNumber = TableNumber(name); 
    Let matches = 0; 
    Do while not IsNull(tableNumber) or (index > 0 and matches > 0)
        index = index + 1; 
        currentName = name & '-' & index; 
        tableNumber = TableNumber(currentName) 
        matches = Match('$(currentName)', $(dataManagerTables));
    Loop 
    If index > 0 then 
            Rename Table '$(name)' to '$(currentName)'; 
    EndIf; 
Next; 
Set dataManagerTables = ;


Unqualify *;

//don't forget to update your FROM path

[orders]:
LOAD
	[OrderID],
	[Item],
	[OrderDate],
	[RefundDate],
    if ( IsNull([RefundDate]) = 0,'filled','blank') as RefundFlag,
	[Sales]
 FROM [lib://insert_your_path_here/data/multi_cal.xlsx]
(ooxml, embedded labels, table is [multi-cal]);

//don't forget to update your FROM path


[autoCalendar]: 
  DECLARE FIELD DEFINITION Tagged ('$date')
FIELDS
  Dual(Year($1), YearStart($1)) AS [Year] Tagged ('$axis', '$year'),
  Dual('Q'&Num(Ceil(Num(Month($1))/3)),Num(Ceil(NUM(Month($1))/3),00)) AS [Quarter] Tagged ('$quarter', '$cyclic'),
  Dual(Year($1)&'-Q'&Num(Ceil(Num(Month($1))/3)),QuarterStart($1)) AS [YearQuarter] Tagged ('$yearquarter', '$qualified'),
  Dual('Q'&Num(Ceil(Num(Month($1))/3)),QuarterStart($1)) AS [_YearQuarter] Tagged ('$yearquarter', '$hidden', '$simplified'),
  Month($1) AS [Month] Tagged ('$month', '$cyclic'),
  Dual(Year($1)&'-'&Month($1), monthstart($1)) AS [YearMonth] Tagged ('$axis', '$yearmonth', '$qualified'),
  Dual(Month($1), monthstart($1)) AS [_YearMonth] Tagged ('$axis', '$yearmonth', '$simplified', '$hidden'),
  Dual('W'&Num(Week($1),00), Num(Week($1),00)) AS [Week] Tagged ('$weeknumber', '$cyclic'),
  Date(Floor($1)) AS [Date] Tagged ('$axis', '$date', '$qualified'),
  Date(Floor($1), 'D') AS [_Date] Tagged ('$axis', '$date', '$hidden', '$simplified'),
  If (DayNumberOfYear($1) <= DayNumberOfYear(Today()), 1, 0) AS [InYTD] ,
  Year(Today())-Year($1) AS [YearsAgo] ,
  If (DayNumberOfQuarter($1) <= DayNumberOfQuarter(Today()),1,0) AS [InQTD] ,
  4*Year(Today())+Ceil(Month(Today())/3)-4*Year($1)-Ceil(Month($1)/3) AS [QuartersAgo] ,
  Ceil(Month(Today())/3)-Ceil(Month($1)/3) AS [QuarterRelNo] ,
  If(Day($1)<=Day(Today()),1,0) AS [InMTD] ,
  12*Year(Today())+Month(Today())-12*Year($1)-Month($1) AS [MonthsAgo] ,
  Month(Today())-Month($1) AS [MonthRelNo] ,
  If(WeekDay($1)<=WeekDay(Today()),1,0) AS [InWTD] ,
  (WeekStart(Today())-WeekStart($1))/7 AS [WeeksAgo] ,
  Week(Today())-Week($1) AS [WeekRelNo] ;

DERIVE FIELDS FROM FIELDS [OrderDate], [FulfilledDate] USING [autoCalendar] ;



//==============Date Bridge====================
[DateBridge]:
     Load
         OrderID,
         [OrderDate] as CanonicalDate,
          'OrderCal' as DateType
          Resident [orders];

     Load
          OrderID,
          [RefundDate] as  CanonicalDate,
          'RefundCal' as DateType
          Resident [orders];



//==============Master Calendar====================
//Below is script used to create 1 or more Master Calendars - these are not always necessary 
// I use them because I have been at Qlik 12+ years and I like the simplicity of them
// to learn more about the traditional Master Calendar: https://www.youtube.com/watch?v=ek_ITfvCnHw

// Main Master Canonical Calendar Begin

QuartersMap:  
MAPPING LOAD   
rowno() as Month,  
'Q' & Ceil (rowno()/3) as Quarter  
AUTOGENERATE (12);  
      
Temp:  
Load  
min([CanonicalDate]) as minDate,  
max([CanonicalDate]) as maxDate  
Resident [DateBridge];  


Let varMinDate = Num(Peek('minDate', 0, 'Temp'));  
Let varMaxDate = Num(Peek('maxDate', 0, 'Temp'));  
DROP Table Temp;  

TempCalendar:  
LOAD  
$(varMinDate) + Iterno()-1 As Num,  
Date($(varMinDate) + IterNo() - 1) as TempDate  
AutoGenerate 1 While $(varMinDate) + IterNo() -1 <= $(varMaxDate);  

 
CanonoMasterCalendar:  
Load  
 TempDate AS [CanonicalDate],
 week(TempDate) As Week,  
 Year(TempDate) As Year,  
 Month(TempDate) As Month,  
 Day(TempDate) As Day,  
  ApplyMap('QuartersMap', month(TempDate), Null()) as Quarter,  
 Week(weekstart(TempDate)) & '-' & WeekYear(TempDate) as WeekYear,  
 
(Year(TempDate)) & '-' & Month(TempDate) as YearMonth,  
 
 WeekDay(TempDate) as WeekDay  
Resident TempCalendar  
Order By TempDate ASC;  
Drop Table TempCalendar;  

// Main Master Canonical Calendar End

//STOP: The additional Master Calendars below are only if you want your multiple date fields to each have a Master Calendar 
// for more granular time periods. 
// Please note that Qlik automatically creates time dimensions when it sees a date field when you first load the data
// so you may not always need these.

// Order Date Master Canonical Calendar Begin

Temp2:  
Load  
min([OrderDate]) as minDate,  
max([OrderDate]) as maxDate  
Resident [orders];  


Let varMinDate = Num(Peek('minDate', 0, 'Temp'));  
Let varMaxDate = Num(Peek('maxDate', 0, 'Temp'));  
DROP Table Temp2;  

TempCalendar2:  
LOAD  
$(varMinDate) + Iterno()-1 As Num,  
Date($(varMinDate) + IterNo() - 1) as TempDate  
AutoGenerate 1 While $(varMinDate) + IterNo() -1 <= $(varMaxDate);  

 
OrdersMasterCalendar:  
Load  
 TempDate AS [OrderDate],
 week(TempDate) As OrderWeek,  
 Year(TempDate) As OrderYear,  
 Month(TempDate) As OrderMonth

Resident TempCalendar2  
Order By TempDate ASC;  
Drop Table TempCalendar2;  

// Order Date Master Canonical Calendar End

// Refund Date Master Canonical Calendar Begin

Temp3:  
Load  
min([RefundDate]) as minDate,  
max([RefundDate]) as maxDate  
Resident [orders];  


Let varMinDate = Num(Peek('minDate', 0, 'Temp'));  
Let varMaxDate = Num(Peek('maxDate', 0, 'Temp'));  
DROP Table Temp3;  

TempCalendar3:  
LOAD  
$(varMinDate) + Iterno()-1 As Num,  
Date($(varMinDate) + IterNo() - 1) as TempDate  
AutoGenerate 1 While $(varMinDate) + IterNo() -1 <= $(varMaxDate);  

 
RefundMasterCalendar:  
Load  
 TempDate AS [RefundDate],
 week(TempDate) As RefundWeek,  
 Year(TempDate) As RefundYear,  
 Month(TempDate) As RefundMonth

Resident TempCalendar3  
Order By TempDate ASC;  
Drop Table TempCalendar3;  

// Refund Date Master Canonical Calendar End